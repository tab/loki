name: Checks
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  push:
    branches:
      - main
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
jobs:
#  analyzer:
#    name: Code analyzer
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-go@v5
#        with:
#          go-version: '1.23'
#      - name: Download statictest binary
#        uses: robinraju/release-downloader@v1.11
#        with:
#          repository: Yandex-Practicum/go-autotests
#          latest: true
#          fileName: statictest
#          out-file-path: .tools
#          token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Setup autotest binary
#        run: |
#          chmod -R +x $GITHUB_WORKSPACE/.tools/statictest
#          mv $GITHUB_WORKSPACE/.tools/statictest /usr/local/bin/statictest
#      - name: Run statictest
#        run: |
#          go vet -vettool=$(which statictest) ./...

  linter:
    name: Golang CI
    # needs: analyzer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

  coverage:
    name: Codecov
    env:
      GO_ENV: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.4-alpine
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: loki-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7.4-alpine
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Load schema.sql
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -d loki-test -f db/schema.sql

      - name: Run tests
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
