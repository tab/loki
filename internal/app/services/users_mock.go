// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/services/users.go
//
// Generated by this command:
//
//	mockgen -source=internal/app/services/users.go -destination=internal/app/services/users_mock.go -package=services
//

// Package services is a generated GoMock package.
package services

import (
	context "context"
	models "loki/internal/app/models"
	serializers "loki/internal/app/serializers"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUsers is a mock of Users interface.
type MockUsers struct {
	ctrl     *gomock.Controller
	recorder *MockUsersMockRecorder
	isgomock struct{}
}

// MockUsersMockRecorder is the mock recorder for MockUsers.
type MockUsersMockRecorder struct {
	mock *MockUsers
}

// NewMockUsers creates a new mock instance.
func NewMockUsers(ctrl *gomock.Controller) *MockUsers {
	mock := &MockUsers{ctrl: ctrl}
	mock.recorder = &MockUsersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsers) EXPECT() *MockUsersMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUsers) Create(ctx context.Context, params *models.User) (*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, params)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockUsersMockRecorder) Create(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUsers)(nil).Create), ctx, params)
}

// FindByIdentityNumber mocks base method.
func (m *MockUsers) FindByIdentityNumber(ctx context.Context, identityNumber string) (*serializers.UserSerializer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByIdentityNumber", ctx, identityNumber)
	ret0, _ := ret[0].(*serializers.UserSerializer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByIdentityNumber indicates an expected call of FindByIdentityNumber.
func (mr *MockUsersMockRecorder) FindByIdentityNumber(ctx, identityNumber any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByIdentityNumber", reflect.TypeOf((*MockUsers)(nil).FindByIdentityNumber), ctx, identityNumber)
}
