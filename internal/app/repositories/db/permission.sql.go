// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: permission.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const findUserPermissions = `-- name: FindUserPermissions :many
SELECT id, name FROM permissions WHERE id IN (
  SELECT permission_id FROM role_permissions WHERE role_id IN (
    SELECT role_id FROM user_roles WHERE user_id = $1))
`

type FindUserPermissionsRow struct {
	ID   uuid.UUID
	Name string
}

func (q *Queries) FindUserPermissions(ctx context.Context, userID uuid.UUID) ([]FindUserPermissionsRow, error) {
	rows, err := q.db.Query(ctx, findUserPermissions, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []FindUserPermissionsRow
	for rows.Next() {
		var i FindUserPermissionsRow
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
